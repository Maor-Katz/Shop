{"version":3,"sources":["actions/actions.js","components/Login.js","components/About.js","components/SearchBox.js","service.js","components/Order.js","components/Storeinfo.js","components/register.js","components/MediaCard.js","components/Loader.js","components/Shop.js","components/Mycartcard.js","components/matirialComponents/Uploadbtn.js","components/matirialComponents/Myselect.js","components/Mycart.js","components/Menucomp.js","App.js","serviceWorker.js","reducers/newUser.js","reducers/existingUser.js","reducers/shoppingCart.js","reducers/userdetails.js","reducers/isAdmin.js","reducers/addProduct.js","reducers/EditProduct.js","reducers/userStatus.js","reducers/view.js","reducers/reducers.js","index.js","payBtn.jpg"],"names":["setUserStatus","type","value","addProduct","shoppingCartfunc","chooseView","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","connect","state","existingUser","userStatus","view","withRouter","props","classes","useState","useEffect","checkView","dispatch","window","addEventListener","innerWidth","a","fetch","method","headers","body","JSON","stringify","rawResponse","json","content","localStorage","token","email","setErrMsg","location","reload","changeHandler","field","e","target","errMsg","loginPage","className","Container","component","maxWidth","CssBaseline","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","Button","disabled","onClick","login","Grid","container","item","history","push","userOpenOrder","Box","mt","About","this","aboutPage","React","Component","root","padding","input","marginLeft","flex","iconButton","divider","height","CustomizedInputBase","Paper","InputBase","placeholder","handler","inputProps","IconButton","aria-label","searchProduct","Divider","orientation","fieldsCounter","obj","count","f","getUserDetailsAndCartId","response","data","length","Identity_num","response2","data2","openCart","filter","cart","isDone","cart_id","getNewCartId","idnum","getInvoice","openNewTab","responseType","then","blob","open","URL","createObjectURL","Blob","link","document","createElement","url","setAttribute","appendChild","click","parentNode","removeChild","userCartId","userDetails","firstname","lastname","getCategories","deleteStorageDirectLogin","alert","clear","productsCounterUser","allCompletedOrdersForUser","Order","productsForCart","totalPrice","searchBox","listForSuggest","city","street","date","credit","selectedDate","successMsg","customStyles","top","left","right","bottom","marginRight","transform","getUserTotalPrice","setState","Object","values","getUserProducts","checkAutoSuggest","newListForSuggest","p","reg","RegExp","myString","exec","product_name","replace","split","test","updateForm","constructor","fillTextField","changeDate","disableWeekends","getDay","checkNumOfOrders","year","month","getMonth","monthTranslate","slice","day","getDate","dayTranslate","confirmOrder","arrival_date","toISOString","console","log","userArayDetails","mobileMenu","map","newArr","class","onDoubleClick","utils","DateFnsUtils","DatePicker","disablePast","shouldDisableDate","every","x","isOpen","style","contentLabel","ariaHideApp","size","moment","require","Storeinfo","productsNum","ordersNum","lastUserOrder","userProductsCounter","userdetails","allOrders","lastOrder","pop","infoPage","itsNewUser","keys","order_date","format","flexBasis","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","newUser","checkUserExists","successOrNot","password","confirm_password","setNextstep","role","nextstep","xs","sm","md","elevation","square","FormControl","InputLabel","Select","labelId","MenuItem","register","moveNextStep","marginBottom","media","MediaCard","Card","CardActionArea","CardMedia","details","img_url","title","editProduct","CardContent","gutterBottom","price","icon","faShekelSign","CardActions","openModal","Loader","src","Shop","categories","productsToShow","modalIsOpen","itemForModal","product","quantity","img_src","product_id","loader","getAllProducts","status","itemDetails","getProductsByCategory","categoryId","addCartItem","sum_price","setForRender","Math","random","openNewCart","dateNow","newCartId","isAdmin","category_id","categoriesNames","shoppingCart","alt","faShoppingCart","faArrowLeft","faArrowRight","generateVoucher","payBtn","c","index","key","category_name","faWindowClose","faMinus","faPlus","shopping_cart","Mycartcard","atOrder","deleteProductItem","UploadButtons","accept","multiple","uploadHandler","htmlFor","formControl","minWidth","selectEmpty","NativeSelects","inputLabel","useRef","labelWidth","setLabelWidth","current","offsetWidth","ref","native","cat","Mycart","files","addNewProdForm","productId","addNew","newProduct","error","uploadImg","imgName","img_name","productToEdit","cleanNewProductForm","FormData","i","append","showAddProductForm","isAdminFlag","pathname","startIcon","Menucomp","menuBar","hamburgerBtn","openAboutPage","openLoginPage","openInfoPage","faBars","App","exact","path","to","Boolean","hostname","match","initialState","allReducers","combineReducers","action","newState","assign","newState1","newState2","newState3","newState4","newState5","newState6","newState7","newState8","store","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.32168fcd.chunk.js","sourcesContent":["export const newUser = (type, value) => (\n    {\n        type: type,\n        value: value\n    })\nexport const setUserStatus = (type, value) => (\n    {\n        type: type,\n        value: value\n    })\n\nexport const addProduct = (type, value) => (\n    {\n        type: type,\n        value: value\n    })\nexport const productToEdit = (type, value) => (\n    {\n        type: type,\n        value: value\n    })\nexport const userDetails = (type, value) => (\n    {\n        type: type,\n        value: value\n    })\n\nexport const existingUser = (type, value) => (\n    {\n        type: type,\n        value: value\n    })\n\nexport const shoppingCartfunc = (type, value) => (\n    {\n        type: type,\n        value: value\n    })\nexport const isAdminDetails = (type, value) => (\n    {\n        type: type,\n        value: value\n    })\nexport const chooseView = (type, value) => (\n    {\n        type: type,\n        value: value\n    })","import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport { existingUser, chooseView } from \"../actions/actions\";\nimport Container from '@material-ui/core/Container';\nimport { withRouter } from 'react-router-dom';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Maor © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Website\n        </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Login(props) {\n  const classes = useStyles();\n  const [screenStatus, setScreenStatus] = useState('')\n  const [menuBar, setMenuBar] = useState(false)\n\n  useEffect(() => {\n    \n    checkView()\n  },[]);\n\n  const checkView = () => {\n    const { dispatch } = props\n    // need to listen to resize event listener in order to choose the view\n    window.addEventListener('resize', () => {\n      if (window.innerWidth < 1200) {\n        dispatch(chooseView('ABOUT_PAGE', false))\n        dispatch(chooseView('INFO_PAGE', false))\n        dispatch(chooseView('MOBILE_MENU', true))\n        dispatch(chooseView('LOGIN_PAGE', true))\n      } else {\n        dispatch(chooseView('ABOUT_PAGE', true))\n        dispatch(chooseView('INFO_PAGE', true))\n        dispatch(chooseView('MOBILE_MENU', false))\n        dispatch(chooseView('LOGIN_PAGE', true))\n      }\n    });\n    //on the first upload of the page we must check the view:\n    if (window.innerWidth < 1200) {\n      dispatch(chooseView('ABOUT_PAGE', false))\n      dispatch(chooseView('INFO_PAGE', false))\n      dispatch(chooseView('MOBILE_MENU', true))\n    }\n  }\n\n  async function login() {\n    try {\n      const rawResponse = await fetch('/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(props.existingUser)\n      });\n      const content = await rawResponse.json();\n      localStorage.token = content.token\n      localStorage.email = props.existingUser.email\n      setErrMsg('')\n      window.location.reload(false);\n    } catch (err) {\n      setErrMsg('wrong credentials')\n    }\n  }\n\n  function changeHandler(field, e) {\n    const { dispatch } = props\n    dispatch(existingUser(field, e.target.value))\n  }\n\n  const [errMsg, setErrMsg] = useState('');\n  const { userStatus, view } = props;\n  return view.loginPage && <div className=\"loginWrapper\">\n    <Container component=\"main\" maxWidth=\"xs\" className=\"flex1\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n          </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={(e) => changeHandler('EMAIL', e)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={(e) => changeHandler('PASSWORD', e)}\n          />\n          {errMsg && <span className=\"errMsg\">{errMsg}<span className=\"chat\"></span></span>}\n          <Button\n            disabled={localStorage.token}\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={() => login()}\n          >\n            Sign In\n            </Button>\n          <Grid container>\n\n            <Grid item>\n              <Link href=\"/register\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      {\n        localStorage.token && <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={() => props.history.push('/shop')}\n        >\n          {userStatus.userOpenOrder ? 'Continue Shopping!' : 'Start Shopping'}\n        </Button>\n      }\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  </div>\n}\n\nconst mapStateToProps = state => ({\n  existingUser: state.existingUser,\n  userStatus: state.userStatus,\n  view: state.view\n})\n\nexport default connect(mapStateToProps)(withRouter(Login))","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { setUserStatus } from '../actions/actions'\n\nclass About extends React.Component {\n  render() {\n    const { view } = this.props;\n\n    return view.aboutPage && <div className=\"aboutPage\">\n      <h1 className=\"aboutTitle\">About Us</h1>\n      <p className=\"storeParagraph\">\n        Welcome to Megasport shop, your number one source for all things wights, cloths, tools. We're dedicated to giving you the very best of products, with a focus on dependability, customer service and uniqueness.\n        Founded in 1990 by Maor Katz , Megasport has come a long way from its beginnings in a starting location, ie: home office, toolshed, Houston, TX. When Maor first started out, his/her passion for helping other parents be more eco-friendly, providing the best equipment\n\n        for his fellow musicians drove him to do intense research, quit her day job, and gave him the impetus to turn hard work and inspiration into to a booming online store.\n\n        We hope you enjoy our products as much as we enjoy offering them to you. If you have any questions or comments, please don't hesitate to contact us.\n\n        Sincerely,\n        Maor, CEO\n          </p>\n    </div>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  userStatus: state.userStatus,\n  view: state.view\n})\n\nexport default connect(mapStateToProps)(withRouter(About))","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n    margin: 'auto',\n    marginTop: '20px'\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\nexport default function CustomizedInputBase(props) {\n  const classes = useStyles();\n\n\n  return (\n    <Paper component=\"form\" className={`${classes.root} glassField`}>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Search Product...\"\n        onChange={(e) => props.handler(e)}\n        inputProps={{ 'aria-label': 'search google maps' }}\n      />\n      <IconButton  className={classes.iconButton} aria-label=\"search\" onClick={() => props.searchProduct()}>\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} orientation=\"vertical\" />\n\n    </Paper>\n  );\n}","\nexport function fieldsCounter(obj) {\n    let count = 0;\n    for (var f in obj) {//count how many field are filled\n        if (obj[f]) {\n            ++count;\n        }\n    }\n    return count\n}\n\nexport async function getUserDetailsAndCartId() {\n    let response = await fetch(`/auth/${localStorage.email}`);\n    let data = await response.json()\n    if (data.length === 0) {\n        return []\n    }\n    let response2 = await fetch(`/products/cart/${data[0] && data[0].Identity_num}`);//looking for open cart, if there is no open, we need to open new cart\n    let data2 = await response2.json()\n    let openCart = data2.filter(cart => cart.isDone == 0)[0] || []\n\n    return [data[0], openCart.cart_id || 'no-open-cart']\n}\n\nexport async function getNewCartId(idnum) {\n    let response = await fetch(`/products/getcartid/${idnum}`);\n    let data = await response.json()\n    if (data[0]) {\n        return data[0].cart_id;\n    } else {\n        return\n    }\n}\n\nexport async function getInvoice(e, openNewTab) {\n    fetch(`/products/invoice`, { responseType: 'blob' })\n        .then((response) => {\n            return response.blob();\n        })\n        .then((blob) => {\n            if (openNewTab) {// case we want to open new tab with pdf and not to save file\n                let newWindow = window.open('/')\n                newWindow.location = URL.createObjectURL(new Blob([blob], { type: \"application/pdf\" }));\n                var link = document.createElement('a');\n                link.href = url\n                link.setAttribute('download', `Voucher.pdf`);\n                // 3. Append to html page\n                document.body.appendChild(link);\n            } else {// case we want to save pdf file\n                var url = URL.createObjectURL(new Blob([blob]));\n                var link = document.createElement('a');\n                link.href = url\n                link.setAttribute('download', `Voucher.pdf`);\n                // 3. Append to html page\n                document.body.appendChild(link);\n                // 4. Force download\n                link.click();\n            }\n            // 5. Clean up and remove the link\n            link.parentNode.removeChild(link);\n        });\n}\n\nexport async function generateVoucher(userCartId, userDetails) {\n    let response = await fetch(`/products/download/${userCartId}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ firstname: userDetails.firstname, lastname: userDetails.lastname, email: userDetails.email })\n    });\n    let data = await response.json()\n}\n\nexport async function getCategories() {\n    let response = await fetch(`/products/category`);\n    let data = await response.json()\n    return data\n}\n//to delete storage need to pass this.props\nexport function deleteStorageDirectLogin(props) {\n    alert('Required token!')\n    localStorage.clear();\n    props.history.push('/login')\n}\n\nexport async function productsCounterUser(email) {\n    let response = await fetch(`/products/openreservation/${email}`);\n    let data = await response.json()\n    return data\n}\n\nexport async function allCompletedOrdersForUser(email) {\n    let response = await fetch(`/products/allreservations/${email}`);\n    let data = await response.json()\n    return data\n}\n\n","import React from 'react';\nimport SearchBox from './SearchBox'\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { getUserDetailsAndCartId, getInvoice } from '../service'\nimport { userDetails } from '../actions/actions'\nimport Modal from 'react-modal';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\n\n\nclass Order extends React.Component {\n\n    state = {\n        productsForCart: [], totalPrice: 0, searchBox: '', listForSuggest: [],\n        form: { city: '', street: '', date: new Date(), credit: '' },\n        selectedDate: new Date(),\n        errMsg: '',\n        successMsg: ''\n    }\n\n    customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        }\n    };\n\n    async componentDidMount() {\n        const { dispatch } = this.props;\n        this.getUserProducts()\n        this.getUserTotalPrice()\n\n        let userArayDetails = await getUserDetailsAndCartId();\n        dispatch(userDetails('DETAILS', { userDetails: userArayDetails[0], userCartId: userArayDetails[1] }))\n    }\n\n    getUserTotalPrice = async () => {\n        let response = await fetch(`/products/sum/${localStorage.email}`);\n        let data = await response.json()\n        this.setState({ totalPrice: Object.values(data[0])[0] })\n    }\n\n    getUserProducts = async () => {\n        let response = await fetch(`/products/productsbyid/${localStorage.email}`, {\n            headers: {\n                token: localStorage.token\n            }\n        });\n        let data = await response.json()\n        this.setState({ productsForCart: data })\n    }\n\n    handler = async (e) => {\n        await this.setState({ searchBox: e.target.value })\n        this.checkAutoSuggest()\n    }\n\n    checkAutoSuggest = () => {\n        const { productsForCart, searchBox } = this.state;\n\n        let newListForSuggest = productsForCart.filter(p => {\n            var reg = new RegExp(searchBox, \"i\");\n            let myString = reg.exec(p.product_name);//generate my string that i have found at product name\n            if (myString === null) { myString = [] }//make it array if i didnt found my string\n            p['newArr'] = p.product_name.replace(reg, '|' + myString[0] + '|').split('|')\n            return reg.test(p.product_name);\n        })\n        this.setState({ listForSuggest: newListForSuggest })\n    }\n    updateForm = (e, field) => {\n        const { form } = this.state;\n        form[field] = field === 'date' ? e.constructor() : e.target.value;\n        this.setState({ form })\n    }\n\n    fillTextField = (field) => {\n        const { form } = this.state\n        const { userDetails } = this.props\n        form[field] = userDetails.userDetails[field];\n        this.setState({ form })\n    }\n    changeDate = (e) => {\n        const { form } = this.state;\n        form['date'] = e;\n        this.setState({ selectedDate: e })\n    }\n\n    disableWeekends = (date) => {\n        return date.getDay() === 5 || date.getDay() === 6;\n    }\n\n    checkNumOfOrders = async () => {\n        const { form } = this.state;\n        let year = form['date'].getFullYear()\n        let month = form['date'].getMonth() + 1;\n        let monthTranslate = `0${month}`.slice(-2)// i.e: in order to get april 04 and not 4\n        let day = form['date'].getDate();\n        let dayTranslate = `0${day}`.slice(-2)// i.e: in order to get day 05 and not 5\n        let response = await fetch(`/products/ordersbydate/${year}-${monthTranslate}-${dayTranslate}`);\n        let data = await response.json()\n        if (data.length > 2) { return false } else {\n            return true\n        }\n    }\n\n    confirmOrder = async () => {\n        const { userDetails } = this.props\n        const { form } = this.state\n        try {\n            let continueOrder = await this.checkNumOfOrders();\n            if (continueOrder === false) {//validation if we have 3 orders already at the same day\n                this.setState({ errMsg: 'No Shipping at your date, please choose another Date' })\n                return\n            }\n\n            const rawResponse = await fetch(`/products/confirm/${userDetails.userDetails.Identity_num}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ arrival_date: `${form.date.toISOString()}` })\n            });\n            const content = await rawResponse.json();\n            this.setState({ successMsg: 'Your reservation had been confirmed!' })\n        } catch (err) {\n            this.setState({ errMsg: 'Can not confirm your order, please try again later' })\n            console.log(err)\n        }\n    }\n\n    render() {\n\n        const { errMsg, searchBox, listForSuggest, form, selectedDate, successMsg } = this.state\n        const { view } = this.props\n        return <div className=\"orderPage\">\n            <h2 className=\"storeInfoTitle \">My Order</h2>\n            {!view.mobileMenu && <div><SearchBox handler={this.handler} /></div>}\n            {searchBox && <div className='autosuggest'>{listForSuggest.map(p => (\n                <div>\n                    <span>{p.newArr[0]}<span className=\"red\">{p.newArr[1]}</span>{p.newArr[2]}</span>\n                </div>\n            ))}</div>}\n            <Button variant=\"contained\" href=\"/shop\"\n\n                className=\"backToShop\">\n                Back To Shop\n      </Button>\n            <div>\n                <h1>Shipping details:</h1>\n                <div className=\"citySection tooltip\">\n                    <span class=\"tooltiptext\">Double click in order to insert your city<span className=\"chat black\"></span></span>\n                    <h3 className=\"sectionTitle\">City</h3><span> <TextField required id=\"standard-basic\" label=\"City\"\n                        value={form['city']}\n                        onChange={(e) => this.updateForm(e, 'city')}\n                        onDoubleClick={() => this.fillTextField('city')} /></span></div>\n\n                <div className=\"streetSection tooltip\">\n                    <span class=\"tooltiptext\">Double click in order to insert your street<span className=\"chat black\"></span></span>\n                    <h3 className=\"sectionTitle\">Street</h3><span> <TextField required id=\"standard-basic\" label=\"street\" onChange={(e) => this.updateForm(e, 'street')}\n                        value={form['street']}\n                        onDoubleClick={() => this.fillTextField('street')} /></span></div>\n\n                <div className=\"dateSection\"><h3 className=\"sectionTitle\">Shipping Date</h3><span>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker disablePast shouldDisableDate={this.disableWeekends} value={selectedDate} onChange={(e) => this.changeDate(e)} />\n                    </MuiPickersUtilsProvider>\n                </span></div>\n\n                <h2 className=\"paymentTitle\">Payments:</h2>\n                <div className=\"cretidSection\"><h3 className=\"sectionTitle\">Credit</h3><span> <TextField required type=\"number\" id=\"standard-basic\" label=\"Standard\" onChange={(e) => this.updateForm(e, 'credit')} /></span></div>\n                <div><Button variant=\"contained\" color=\"primary\"\n                    disabled={!Object.values(form).every(x => x)} className=\"confirmBtn\" onClick={() => this.confirmOrder()}>\n                    confirm order\n</Button></div>\n            </div>\n            <Modal\n                isOpen={errMsg || successMsg}\n                style={this.customStyles}\n                contentLabel=\"Example Modal\"\n                ariaHideApp={false}\n            >\n                {errMsg && <div>\n                    <div className=\"errorMsg\">{errMsg}</div>\n                    <div className=\"addBtnModal\"><Button size=\"small\" color=\"primary\" className=\"addButton\" onClick={() => this.setState({ errMsg: '', successMsg: '' })}>\n                        Close\n        </Button></div>\n                </div>}\n                {successMsg && <div>\n                    <div className=\"lineModal\"></div>\n                    <div className=\"successMsg\">{successMsg}</div>\n                    <div className=\"voucherBtn\">\n                        <Button variant=\"contained\" color=\"primary\"\n                            onClick={(e) => getInvoice(e, true)} className=\"width111\" >\n                            print\n      </Button>\n                        <span className=\"leftMargin\"> <Button variant=\"contained\" color=\"primary\"\n                            onClick={(e) => getInvoice(e)} >\n                            download\n      </Button></span>\n                    </div>\n                    <div className=\"addBtnModal\"><Button size=\"small\" color=\"primary\" href=\"/shop\" className=\"addButton\" onClick={() => this.setState({ errMsg: '', successMsg: '' })}>\n                        OK\n        </Button></div>\n                </div>\n                }\n\n            </Modal>\n        </div>;\n    }\n}\nconst mapStateToProps = state => ({\n    userDetails: state.userDetails,\n    view: state.view\n})\n\nexport default connect(mapStateToProps)(withRouter(Order))","import React from 'react';\nimport { productsCounterUser, allCompletedOrdersForUser, getUserDetailsAndCartId } from '../service'\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { setUserStatus } from '../actions/actions'\nvar moment = require('moment');\n\nclass Storeinfo extends React.Component {\n\n  state = {\n    productsNum: 0,\n    ordersNum: 0,\n    lastUserOrder: {},\n    name: ''\n  }\n\n  async componentDidMount() {\n    const { dispatch } = this.props;\n    fetch('/products')\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ productsNum: Object.values(data[0])[0] })\n      });\n    fetch('/products/orders')\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ ordersNum: Object.values(data[0])[0] })\n      });\n    if (localStorage.email) {\n      let userProductsCounter = await productsCounterUser(localStorage.email);\n      let userdetails = await getUserDetailsAndCartId()\n      let name = userdetails[0].firstname\n      this.setState({ userOpenOrder: true, name })\n      //case user have open order:\n      if (userProductsCounter.length > 0) {\n        dispatch(setUserStatus('OPEN_ORDER', true))\n      } else {//case user does not have open order\n        let allOrders = await allCompletedOrdersForUser(localStorage.email)\n        if (allOrders.length > 0) {//case user closed his all previous orders\n          let lastOrder = allOrders.pop();\n          this.setState({ lastUserOrder: lastOrder, name })\n        } else {//user does not have any orders, new user:\n          dispatch(setUserStatus('NEW_USER', true))\n        }\n      }\n    }\n  }\n\n  render() {\n    const { productsNum, ordersNum, lastUserOrder, name } = this.state;\n    const { userStatus, view } = this.props\n    return view.infoPage && <div className=\"storeInfoPage\">\n      <h1 className=\"storeInfoTitle\">Store Information</h1>\n      <div className=\"infoDetails\">\n        <div className=\"numOfProducts\">Availble products of Megasport : {productsNum}</div>\n        <div className=\"numOfProducts\">Orders completed of Megasport : {ordersNum}</div>\n        {userStatus.itsNewUser && <h3 className=\"storeNotfication\">\n          Welcome {name}!\n      </h3>}\n        {userStatus.userOpenOrder && <h3>\n          <span className=\"underline\">{name}!</span> you forgot some products...\n      </h3>}\n        {Object.keys(lastUserOrder).length > 0 && <h3>\n          Your last purchase was at {moment(lastUserOrder.order_date).format('MMMM Do YYYY, h:mm:ss a')}\n        </h3>}\n      </div>\n      <div className=\"circle1\"></div>\n      <div className=\"circle2\"></div>\n      <div className=\"circle3\"></div>\n    </div>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  userStatus: state.userStatus,\n  view: state.view\n})\n\nexport default connect(mapStateToProps)(withRouter(Storeinfo))","import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport { newUser, chooseView } from \"../actions/actions\";\nimport { fieldsCounter } from \"../service\"\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Maor © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Website\n      </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: '100vh', flexBasis: 'unset', maxWidth: 'none'\n    },\n    image: {\n        backgroundImage: 'url(https://images.unsplash.com/photo-1582020086775-1c3fc831a1c7?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max)',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(1, 1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction Register(props) {\n    const classes = useStyles();\n    useEffect(() => {\n        checkView()\n      }, []);\n    \n    const checkView = () => {\n        const { dispatch } = props\n        // need to listen to resize event listener in order to choose the view\n        window.addEventListener('resize', () => {\n          if (window.innerWidth < 1200) {\n            dispatch(chooseView('ABOUT_PAGE', false))\n            dispatch(chooseView('INFO_PAGE', false))\n          } else {\n            dispatch(chooseView('ABOUT_PAGE', true))\n            dispatch(chooseView('INFO_PAGE', true))\n          }\n        });\n        //on the first upload of the page we must check the view:\n        if (window.innerWidth < 1200) {\n            dispatch(chooseView('ABOUT_PAGE', false))\n            dispatch(chooseView('INFO_PAGE', false))\n        }\n      }\n\n    function changeHandler(field, e) {\n        const { dispatch } = props\n        dispatch(newUser(field, e.target.value))\n    }\n    async function checkUserExists() {// check if email or id already exists\n        try {\n            const rawResponse = await fetch('/auth/check', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ email: props.newUser.email, Identity_num: props.newUser.id })\n            });\n            const content = await rawResponse.json();\n            return 'success!'\n        } catch (err) {\n            return 'err'\n        }\n    }\n\n    async function moveNextStep() {\n\n        let counter = fieldsCounter(props.newUser)//count how many field are filled\n        if (counter === 4) {\n            let successOrNot = await checkUserExists();// check if email or id already exists\n            if (props.newUser.password !== props.newUser.confirm_password) {\n                setErrMsg('verify your password please!')\n                return\n            }\n            if (successOrNot === 'success!') {\n                setNextstep(true)\n                setErrMsg('')\n            } else {\n                setErrMsg('Id or Email is already exists')\n            }\n        } else {\n            setErrMsg('Please fill all fields!')\n            return\n        }\n    }\n\n    async function register() {\n        const { newUser } = props;\n        try {\n            const rawResponse = await fetch('/auth/register', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    firstname: newUser.firstname,\n                    lastname: newUser.lastname,\n                    email: newUser.email,\n                    Identity_num: newUser.id,\n                    street: newUser.street,\n                    role: newUser.role,\n                    password: newUser.password,\n                    city: newUser.city\n                })\n            });\n            const content = await rawResponse.json();\n            localStorage.token = content.token;\n            localStorage.email = newUser.email;\n            return 'success!'\n        } catch (err) {\n            return 'err'\n        }\n    }\n\n    const [nextstep, setNextstep] = useState(false);\n    const [errMsg, setErrMsg] = useState('');\n\n    return (\n        <div className=\"registerPage\">\n            \n            <Grid container component=\"main\" className={classes.root}>\n                <CssBaseline />\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square className={classes.root}>\n                    <div className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Register\n          </Typography>\n                        <form className={classes.form} noValidate>\n                            {!nextstep && <div> <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"identityNum\"\n                                label=\"id number\"\n                                autoComplete=\"email\"\n                                autoFocus\n                                onChange={(e) => changeHandler('ID', e)}\n                            />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                    onChange={(e) => changeHandler('EMAIL', e)}\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    onChange={(e) => changeHandler('PASSWORD', e)}\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    label=\"Confirm Password\"\n                                    type=\"password\"\n                                    id=\"confirmPassword\"\n                                    autoComplete=\"current-password\"\n                                    onChange={(e) => changeHandler('CONFIRM_PASSWORD', e)}\n                                />\n                            </div>\n                            }\n                            {nextstep && <div>  <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"firstname\"\n                                label=\"first name\"\n                                autoComplete=\"firstname\"\n                                autoFocus\n                                onChange={(e) => changeHandler('FIRSTNAME', e)}\n                            />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"lastname\"\n                                    label=\"last name\"\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                    onChange={(e) => changeHandler('LASTNAME', e)}\n                                />\n\n\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"role\"\n                                    label=\"role\"\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                    onChange={(e) => changeHandler('ROLE', e)}\n                                />\n\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"street\"\n                                    label=\"street\"\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                    onChange={(e) => changeHandler('STREET', e)}\n                                />\n                                <FormControl fullWidth>\n                                    <InputLabel id=\"demo-simple-select-autowidth-label\">Select City...</InputLabel>\n                                    <Select\n                                        required\n                                        fullWidth\n                                        labelId=\"demo-simple-select-filled-label\"\n                                        id=\"demo-simple-select-filled\"\n                                        value={props.newUser.city}\n                                        onChange={(e) => changeHandler('CITY', e)}\n                                    >\n                                        <MenuItem value=\"\" disabled>\n                                            <em>None</em>\n                                        </MenuItem>\n                                        <MenuItem value={\"Tel Aviv\"}>Tel Aviv</MenuItem>\n                                        <MenuItem value={\"Haifa\"}>Haifa</MenuItem>\n                                        <MenuItem value={\"Beer-Shave\"}>Beer-Shave</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </div>\n                            }\n                            {errMsg && <span className=\"errMsg\">{errMsg}<span className=\"chat\"></span></span>}\n                            {nextstep ? <Button\n                                disabled={!Object.values(props.newUser).every(x => x)}\n                                type=\"submit\"\n                                href=\"/login\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                onClick={() => register()}\n                            >\n                                Sign Up\n            </Button> : <div className=\"paddingClass\"><Button variant=\"contained\" color=\"primary\" href=\"#\"\n                                    onClick={() => moveNextStep()} >\n                                    Next\n      </Button></div>}\n\n                            <Grid item>\n                                <Link href=\"/login\" variant=\"body2\">\n                                    {\"have an account? Sign In\"}\n                                </Link>\n                            </Grid>\n                            <Box mt={5}>\n                                <Copyright />\n                            </Box>\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n        </div >\n    );\n}\nconst mapStateToProps = state => ({\n    newUser: state.newUser,\n    view: state.view\n})\n\nexport default connect(mapStateToProps)(Register)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { faShekelSign } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 210,\n    marginRight: 10,\n    marginTop: 10,\n    marginBottom: 5\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n  return (\n    <Card className={`${classes.root} specificCard`} >\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={`https://maor-katz-new-bucket1990.s3.eu-west-2.amazonaws.com/${props.details.img_url}`}\n          title=\"Contemplative Reptile\"\n          onClick={()=> props.editProduct(props.details)}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.details.product_name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.details.price} <FontAwesomeIcon icon={faShekelSign} className=\"size11\" />\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" className=\"addButton\" onClick={() => props.openModal(props.details)}>\n          Add\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}","import React from 'react';\n\nclass Loader extends React.Component {\n\n    state = {\n\n    }\n\n\n    render() {\n\n        return <div className=\"LoaderPage\">\n            <div className=\"loaderWrapper\"><img src=\"https://media.giphy.com/media/11ASZtb7vdJagM/giphy.gif\" className=\"loadGif\"/></div>\n        </div>\n    }\n}\n\nexport default Loader","import React from 'react';\nimport SearchBox from './SearchBox'\nimport MediaCard from './MediaCard'\nimport { getUserDetailsAndCartId, getNewCartId, generateVoucher, getCategories, deleteStorageDirectLogin } from '../service'\nimport Modal from 'react-modal';\nimport { faPlus, faMinus, faWindowClose, faShoppingCart, faArrowRight, faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { shoppingCartfunc, addProduct } from '../actions/actions'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from '@material-ui/core/Button';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport Loader from './Loader'\nimport payBtn from '../payBtn.jpg'\n\nclass Shop extends React.Component {\n\n    state = {\n        searchBox: '',\n        categories: [],\n        productsToShow: [],\n        modalIsOpen: false,\n        itemForModal: { product: '', quantity: 1, img_src: '', product_id: 0, price: 0 },\n        userDetails: {},\n        userCartId: 0,\n        loader: true\n    }\n\n    customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)'\n        }\n    };\n\n    async componentDidMount() {\n        let categoriesNames = await getCategories();\n        this.setState({ categories: categoriesNames })\n        this.getAllProducts();\n\n        let userArayDetails = await getUserDetailsAndCartId();\n        if (userArayDetails.length === 0) { return } //case we didnt success to get details about user\n        await this.setState({ userDetails: userArayDetails[0], userCartId: userArayDetails[1], loader: false })\n        if (userArayDetails[1] === 'no-open-cart') {\n            this.openNewCart()\n        }\n    }\n\n    getAllProducts = async () => {\n        let response = await fetch(`/products/all`, {\n            headers: {\n                'Content-Type': 'application/json',\n                token: localStorage.token\n            }\n        });\n        if (response.status === 401) {\n            deleteStorageDirectLogin(this.props)\n        }\n        let data = await response.json()\n        this.setState({ productsToShow: data })\n    }\n\n    handler = (e) => {\n        this.setState({ searchBox: e.target.value })\n    }\n\n    openModal = (itemDetails) => {\n        this.setState({\n            itemForModal: { product: itemDetails.product_name, quantity: 1, img_src: itemDetails.img_url, product_id: itemDetails.id || itemDetails.product_id, price: itemDetails.price },\n            modalIsOpen: true\n        })\n    }\n\n    getProductsByCategory = async (categoryId) => {\n        let response = await fetch(`/products/bycategory/${categoryId}`);\n        let data = await response.json()\n        this.setState({ productsToShow: data })\n    }\n\n    searchProduct = async () => {\n        let response = await fetch(`/products/search/${this.state.searchBox}`);\n        let data = await response.json()\n        this.setState({ productsToShow: data })\n    }\n\n    addCartItem = async () => {\n        const { userCartId, itemForModal } = this.state\n        try {\n            let response = await fetch(`/products/cartitem/add`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    product_id: itemForModal.product_id,\n                    quantity: itemForModal.quantity,\n                    price: itemForModal.price,\n                    sum_price: itemForModal.price * itemForModal.quantity,\n                    cart_id: userCartId\n                })\n            });\n            let data = await response.json()\n            this.setState({\n                modalIsOpen: false,\n                itemForModal: { product: '', quantity: 1, img_src: '', product_id: 0, price: 0 }\n            })\n\n            this.props.setForRender(Math.random() * 100)//for rendering parent in order Mycart component to rerender also\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    openNewCart = async () => {\n        const { userDetails } = this.state\n        let response = await fetch(`/products/newcart`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ Identity_num: userDetails.Identity_num, city: userDetails.city, street: userDetails.street, dateNow: new Date().toISOString() })\n        });\n        let data = await response.json()\n        let newCartId = await getNewCartId(userDetails.Identity_num);\n        this.setState({ userCartId: newCartId })\n    }\n\n    editProduct = (details) => {\n        const { userDetails } = this.state\n        if (!userDetails.isAdmin) { return }// case user is not admin, dont continute with this function\n        const { dispatch } = this.props\n        dispatch(addProduct('NAME_P', details.product_name))\n        dispatch(addProduct('PRICE_P', details.price))\n        dispatch(addProduct('CATEGORY_ID', details.category_id))\n        dispatch(addProduct('EDIT_PRODUCT', details.id))\n        dispatch(addProduct('IMAGE_NAME', details.img_url))\n    }\n\n    render() {\n        const { categories, productsToShow, modalIsOpen, itemForModal, userDetails, userCartId, loader } = this.state;\n        const { shoppingCart, dispatch, isAdmin, view } = this.props\n        return <div className={`Shop ${shoppingCart && view.mobileMenu && 'displayNone'}`}>\n            {loader && <Loader />}\n            <div className=\"logoutWrapper\">\n                <div className=\"hiLogo\">Hey {userDetails.firstname}!</div>\n                <a className=\"logoutBtn\" onClick={() => localStorage.clear()} href=\"/login\">Logout</a>\n            </div>\n            <img src=\"https://www.bls.gov/spotlight/2017/sports-and-exercise/images/cover_image.jpg\" className=\"logo\" alt=\"none\" />\n            {!isAdmin && <div className=\"openCartBtn\" onClick={() => dispatch(shoppingCartfunc('SHOPPING_CART', !shoppingCart))}>\n                <FontAwesomeIcon icon={faShoppingCart} className=\"shoppingIcon\" />\n                <FontAwesomeIcon icon={shoppingCart ? faArrowLeft : faArrowRight} className=\"rightArrow\" />\n            </div>}\n\n            <h1 className=\"storeInfoTitle fontsize\">Megasport</h1>\n            {!userDetails.isAdmin && <a className=\"payWrapperBtn\" href=\"/order\" onClick={() => generateVoucher(userCartId, userDetails)}><img src={payBtn} className=\"payBtn\" /></a>\n            }\n            <div ><SearchBox handler={this.handler} searchProduct={this.searchProduct} /></div>\n            <div className=\"categoryPanel\">\n                <div className=\"categoryTitles\">\n                    <div className=\"specificCategory categoryAll\" onClick={() => this.getAllProducts()}>\n                        All\n                         <span className=\"divider\"></span>\n                    </div>\n\n                    {categories.map((c, index) => (\n                        <div className=\"categoryWrapper\" key={index}>\n                            <div className=\"specificCategory\" onClick={() => this.getProductsByCategory(c.id)}>{c.category_name}</div>\n                            {!(index === (categories.length - 1)) && <span className=\"divider\"></span>}\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className=\"productsList\">{productsToShow.map((p, index) => (\n                <MediaCard details={p} openModal={this.openModal} key={index} editProduct={this.editProduct} />\n            ))}</div>\n            <Modal\n                isOpen={modalIsOpen}\n                style={this.customStyles}\n                contentLabel=\"Example Modal\"\n                ariaHideApp={false}\n            >\n                <FontAwesomeIcon icon={faWindowClose} className=\"closeModal\" onClick={() => this.setState({\n                    modalIsOpen: false,\n                    itemForModal: { product: '', quantity: 1, img_src: '' }\n                })} />\n                <img src={`https://maor-katz-new-bucket1990.s3.eu-west-2.amazonaws.com/${itemForModal.img_src}`} className=\"imgModal\" alt=\"none\" />\n                <div className=\"productModal\">{itemForModal.product}</div>\n                <div className=\"qunatityDiv\">\n                    <FontAwesomeIcon icon={faMinus} className=\"qunatityBtn\" onClick={() => { itemForModal.quantity--; this.setState({ itemForModal }) }} />\n                    <span className=\"qunatityModal\">{itemForModal.quantity}</span>\n                    <FontAwesomeIcon icon={faPlus} className=\"qunatityBtn\" onClick={() => { itemForModal.quantity++; this.setState({ itemForModal }) }} />\n                </div>\n                <div className=\"addBtnModal\"><Button size=\"small\" color=\"primary\" className=\"addButton\" onClick={() => this.addCartItem()}>\n                    Add\n        </Button></div>\n            </Modal>\n        </div>;\n    }\n}\nconst mapStateToProps = state => ({\n    shoppingCart: state.shoppingCart.shopping_cart,\n    isAdmin: state.isAdmin.isAdmin,\n    view: state.view\n})\n\nexport default connect(mapStateToProps)(withRouter(Shop))","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { faShekelSign } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: 180,\n        height: 190,\n        marginTop: 20,\n        margin: 'auto'\n    },\n});\n\n\nexport default function Mycartcard(props) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <CardActionArea>\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"100\"\n                    image={`https://maor-katz-new-bucket1990.s3.eu-west-2.amazonaws.com/${props.details.img_url}`}\n                    title=\"Contemplative Reptile\"\n                />\n                <CardContent className=\"padding\">\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className=\"fontSize\">\n                        {props.details.quantity} X {props.details.product_name} - {props.details.price}  <FontAwesomeIcon icon={faShekelSign} className=\"size11\" />\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                {!props.atOrder && <Button size=\"small\" color=\"primary\" className=\"searchProduct\" onClick={() => props.deleteProductItem(props.details.product_id)}>\n                    Delete\n        </Button>}\n            </CardActions>\n        </Card>\n    );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nexport default function UploadButtons(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <input\n        accept=\"image/*\"\n        className={classes.input}\n        id=\"contained-button-file\"\n        multiple\n        type=\"file\"\n        onChange={(e) => props.uploadHandler(e)}\n      />\n      <label htmlFor=\"contained-button-file\">\n        <Button variant=\"contained\" color=\"primary\" component=\"span\">\n          Upload\n        </Button>\n      </label>\n      <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={(e) => props.uploadHandler(e)} />\n      <label htmlFor=\"icon-button-file\">\n        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n          <PhotoCamera />\n        </IconButton>\n      </label>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {addProduct} from '../../actions/actions'\n\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 210,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function NativeSelects(props) {\n  const classes = useStyles();\n\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  return (\n    <div>\n\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel ref={inputLabel} htmlFor=\"outlined-age-native-simple\">\n          Category\n        </InputLabel>\n        <Select\n          native\n          value={props.categoryId}\n          onChange={e => props.dispatch(addProduct('CATEGORY_ID', +e.target.value))}\n          labelWidth={labelWidth}\n          inputProps={{\n            name: 'age',\n            id: 'outlined-age-native-simple',\n          }}\n        >\n          <option value=\"\" />\n          {props.categories.map((cat,index) => <option key={index} value={cat.id}>{cat.category_name}</option>)}\n        </Select>\n      </FormControl>\n\n    </div>\n  );\n}\n","import React from 'react';\nimport Mycartcard from './Mycartcard'\nimport { faShekelSign } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { getUserDetailsAndCartId, getCategories, deleteStorageDirectLogin } from '../service'\nimport { isAdminDetails } from '../actions/actions'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport UploadButtons from './matirialComponents/Uploadbtn'\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { addProduct, chooseView, shoppingCartfunc } from '../actions/actions'\nimport NativeSelects from './matirialComponents/Myselect'\n\nclass Mycart extends React.Component {\n\n    state = {\n        productsForCart: [],\n        totalPrice: 0,\n        categories: [],\n        files: {},\n        addNewProdForm: false,\n    }\n    useStyles = makeStyles(theme => ({\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n    }));\n\n    async componentDidMount() {\n        const { dispatch } = this.props\n        this.checkView()\n        this.getUserProducts()\n        this.getUserTotalPrice()\n        let userDetails = await getUserDetailsAndCartId()\n        let isAdminFlag = userDetails[0] && userDetails[0].isAdmin\n        dispatch(isAdminDetails('IS_ADMIN', isAdminFlag))\n        if (isAdminFlag) {\n            let categories = await getCategories();\n            this.setState({ categories })\n        }\n    }\n\n    checkView = () => {\n        const { dispatch } = this.props\n        // need to listen to resize event listener in order to choose the view\n        window.addEventListener('resize', () => {\n            if (window.innerWidth < 1200) {\n                dispatch(chooseView('MOBILE_MENU', true))\n            } else {\n                dispatch(chooseView('MOBILE_MENU', false))\n            }\n        });\n        //on the first upload of the page we must check the view:\n        if (window.innerWidth < 1200) {\n            dispatch(chooseView('MOBILE_MENU', true))\n        }\n    }\n\n    getUserTotalPrice = async () => {\n        let response = await fetch(`/products/sum/${localStorage.email}`);\n        let data = await response.json()\n        this.setState({ totalPrice: Object.values(data[0])[0] || 0 })\n    }\n\n    getUserProducts = async () => {\n        let response = await fetch(`/products/productsbyid/${localStorage.email}`, {\n            headers: {\n                'Content-Type': 'application/json',\n                token: localStorage.token\n            }\n        });\n        if (response.status === 401) {\n            deleteStorageDirectLogin(this.props);\n        }\n        let data = await response.json()\n        this.setState({ productsForCart: data })\n    }\n\n    deleteProductItem = async (productId) => {\n        let response = await fetch(`/products/product/${productId}`, {\n            method: 'DELETE'\n        });\n        let data = await response.json();\n        this.getUserProducts();\n        this.getUserTotalPrice();\n    }\n\n    uploadHandler = async (e) => {\n        const { dispatch } = this.props\n        dispatch(addProduct('UPLOAD_IMAGE', e.target.files));\n        dispatch(addProduct('IMAGE_NAME', e.target.files[0].name));\n    }\n\n    addProduct = async (addNew) => {\n        const { newProduct, productId } = this.props;\n        //if its new product i must add new image:!!!\n        if (!newProduct.files[0] && addNew) { return console.error('please add image to the product') }\n        await this.uploadImg();\n        try {\n            let response = await fetch(`/products/${addNew ? 'addproduct' : 'editproduct'}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    ...newProduct,\n                    imgName: newProduct.img_name,\n                    productToEdit: addNew ? false : productId.productId\n                })// if our case is to edit an existing product, we need to send product id - productToEdit\n            });\n            let data = await response.json()\n            this.cleanNewProductForm()\n            this.setState({ addNewProdForm: false })\n            this.props.setForRender(Math.random() * 100)//for rendering parent in order Mycart component to rerender also\n\n        } catch (e) {\n            console.log('upload file failed', e)\n        }\n    }\n    uploadImg = async () => {\n        const { newProduct } = this.props;\n        const form = new FormData()\n        for (let i = 0; i < newProduct.files.length; i++) {\n            form.append('abc', newProduct.files[i], newProduct.files[i].name)\n        }\n\n        try {\n            let response = await fetch(`/products/uploadimg`, {\n                method: 'POST',\n                body: form\n            });\n            let data = await response.json()\n            console.log(data)\n\n        } catch (e) {\n            console.log('upload file failed', e)\n        }\n    }\n\n    cleanNewProductForm = () => {\n        const { dispatch } = this.props\n        dispatch(addProduct('UPLOAD_IMAGE', {}));\n        dispatch(addProduct('IMAGE_NAME', ''));\n        dispatch(addProduct('PRICE_P', 0));\n        dispatch(addProduct('NAME_P', ''));\n        dispatch(addProduct('CATEGORY_ID', 0));\n    }\n\n    showAddProductForm = () => {\n        this.cleanNewProductForm();\n        this.setState({ addNewProdForm: true })\n    }\n\n    render() {\n        const { productsForCart, totalPrice, categories, addNewProdForm } = this.state;\n        const { shoppingCart, isAdmin, newProduct, dispatch, view } = this.props;\n        \n        return  <div className={`myCartPanel ${shoppingCart || isAdmin ? 'flex1' : 'flex0'} ${view.mobileMenu && window.location.pathname==='/order' && 'displayNone'} ${this.props.atOrder ? 'cartAtOrder' : ''}`}>\n            {!isAdmin ? <div>\n                <h2 className=\"storeInfoTitle \">My Cart</h2>\n                {productsForCart.map((p, index) => (\n                    <Mycartcard details={p} key={index} deleteProductItem={this.deleteProductItem} atOrder={this.props.atOrder ? true : false} />\n                ))}\n                <div className=\"totalPrice\">Total price : {totalPrice} <FontAwesomeIcon icon={faShekelSign} className=\"size12\" /></div>\n                {view.mobileMenu && <Button size=\"small\" variant=\"contained\" color=\"primary\" className=\"marginBottom\"\n                    onClick={() => dispatch(shoppingCartfunc('SHOPPING_CART', false))}>\n                    Back To Shop\n</Button>}\n            </div> : <div className=\"adminPanel\">\n                    <div>\n                        {addNewProdForm ? <h2 className=\"storeInfoTitle \">Add New Product</h2> : <h2 className=\"storeInfoTitle \">Edit</h2>}\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            label=\"Name\"\n                            value={newProduct.name}\n                            autoFocus\n                            onChange={(e) => dispatch(addProduct('NAME_P', e.target.value))}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            label=\"Price\"\n                            value={newProduct.price}\n                            type=\"number\"\n                            autoFocus\n                            onChange={(e) => dispatch(addProduct('PRICE_P', +e.target.value))}\n                        />\n\n                        <NativeSelects categories={categories} dispatch={dispatch} categoryId={newProduct.category_id} />\n\n                        <UploadButtons uploadHandler={this.uploadHandler} />\n                        {addNewProdForm ? <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"large\"\n                            className=\"saveBtn\"\n                            startIcon={<SaveIcon />}\n                            onClick={() => this.addProduct(true)}\n                        >\n                            Add\n      </Button> : <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"large\"\n                                className=\"saveBtn\"\n                                startIcon={<SaveIcon />}\n                                onClick={() => this.addProduct(false)}\n                            >\n                                Save\n      </Button>}\n                    </div>\n\n\n                    <div><img className=\"imageAdd\" src=\"https://d2gg9evh47fn9z.cloudfront.net/800px_COLOURBOX11070076.jpg\" onClick={() => this.showAddProductForm()} /></div>\n                </div>}\n        </div>;\n    }\n}\nconst mapStateToProps = state => ({\n    shoppingCart: state.shoppingCart.shopping_cart,\n    isAdmin: state.isAdmin.isAdmin,\n    newProduct: state.newProduct,\n    productId: state.editProduct,\n    view: state.view\n})\n\nexport default connect(mapStateToProps)(withRouter(Mycart))","import React from 'react';\r\nimport { faBars, faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { chooseView } from \"../actions/actions\";\r\n\r\nclass Menucomp extends React.Component {\r\n\r\n    state = {\r\n        menuBar: false,\r\n        hamburgerBtn: true\r\n    }\r\n\r\n    openAboutPage = () => {\r\n        const { dispatch } = this.props\r\n        dispatch(chooseView('ABOUT_PAGE', true))\r\n        dispatch(chooseView('INFO_PAGE', false))\r\n        dispatch(chooseView('LOGIN_PAGE', false))\r\n        this.setState({ menuBar: false, hamburgerBtn: true })\r\n    }\r\n\r\n    openLoginPage = () => {\r\n        const { dispatch } = this.props\r\n        dispatch(chooseView('ABOUT_PAGE', false))\r\n        dispatch(chooseView('INFO_PAGE', false))\r\n        dispatch(chooseView('LOGIN_PAGE', true))\r\n        this.setState({ menuBar: false, hamburgerBtn: true })\r\n    }\r\n\r\n    openInfoPage = () => {\r\n        const { dispatch } = this.props\r\n        dispatch(chooseView('ABOUT_PAGE', false))\r\n        dispatch(chooseView('INFO_PAGE', true))\r\n        dispatch(chooseView('LOGIN_PAGE', false))\r\n        this.setState({ menuBar: false, hamburgerBtn: true })\r\n    }\r\n\r\n    render() {\r\n        const { dispatch, view } = this.props;\r\n        const { menuBar, hamburgerBtn } = this.state;\r\n\r\n        return view.mobileMenu && <div className=\"MenuComponent\">\r\n            {hamburgerBtn && <FontAwesomeIcon icon={faBars} className=\"menuIcon\" size=\"large\" onClick={() => this.setState({ menuBar: true, hamburgerBtn: false })} />}\r\n            {!hamburgerBtn && <FontAwesomeIcon icon={faWindowClose} className=\"menuIcon\" size=\"large\" onClick={() => this.setState({ menuBar: false, hamburgerBtn: true })} />}\r\n\r\n            <div className={`menuBar ${menuBar ? 'width80' : ''}`}>\r\n                    <span className={`menuBtn ${menuBar ? 'inlineBlock' : ''}`} onClick={() => this.openLoginPage()}>Login</span>\r\n                    <span className=\"lineMenu\"></span>\r\n                    <span className={`menuBtn ${menuBar ? 'inlineBlock' : ''}`} onClick={() => this.openAboutPage()}>About</span>\r\n                    <span className=\"lineMenu\"></span>\r\n                    <span className={`menuBtn ${menuBar ? 'inlineBlock' : ''}`} onClick={() => this.openInfoPage()}>Info</span>\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    view: state.view\r\n})\r\n\r\nexport default connect(mapStateToProps)(withRouter(Menucomp))","import React, { useState } from 'react';\nimport Login from './components/Login'\nimport About from './components/About'\nimport Order from './components/Order'\nimport Storeinfo from './components/Storeinfo'\nimport Register from './components/register'\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport Shop from './components/Shop';\nimport Mycart from './components/Mycart';\nimport Menucomp from './components/Menucomp';\n\n\n\n\n\nfunction App() {\n  const [forRender, setForRender] = useState(0);\n  return (\n    <div className=\"App\">\n\n\n      <Router>\n        <Switch>\n          <Route exact path=\"/login\" component={() => <div className=\"loginPage\"><Login /> <About /> <Storeinfo /><Menucomp /></div>} />\n\n          <Route path=\"/register\" component={() => <div className=\"loginPage\"><Register /> <About /> <Storeinfo /></div>} />\n\n          <Route path=\"/shop\" component={() => <div className=\"ShopPage\"><Mycart setForRender={setForRender}/> <Shop setForRender={setForRender} /></div>} />\n          <Route path=\"/order\" component={() => <div className=\"ShopPage\"><Mycart atOrder={true} /> <Order /></div>} />\n\n          <Redirect to=\"/login\"\n\n          />\n\n        </Switch>\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    firstname: '',\n    lastname: '',\n    email: '',\n    id: '',\n    city: '',\n    street: '',\n    password: '',\n    confirm_password: '',\n    role: ''\n};\n\nexport const newUser = (state = initialState, action) => {\n    switch (action.type) {\n        case 'FIRSTNAME':\n            let newState = Object.assign({}, state, {\n                firstname: action.value\n            })\n            return newState;\n        case 'LASTNAME':\n            let newState1 = Object.assign({}, state, {\n                lastname: action.value\n            })\n            return newState1\n        case 'EMAIL':\n            let newState2 = Object.assign({}, state, {\n                email: action.value\n            })\n            return newState2\n        case 'ID':\n            let newState3 = Object.assign({}, state, {\n                id: action.value\n            })\n            return newState3\n        case 'CITY':\n            let newState4 = Object.assign({}, state, {\n                city: action.value\n            })\n            return newState4\n        case 'STREET':\n            let newState5 = Object.assign({}, state, {\n                street: action.value\n            })\n            return newState5\n        case 'ROLE':\n            let newState6 = Object.assign({}, state, {\n                role: action.value\n            })\n            return newState6\n        case 'PASSWORD':\n            let newState7 = Object.assign({}, state, {\n                password: action.value\n            })\n            return newState7\n        case 'CONFIRM_PASSWORD':\n            let newState8 = Object.assign({}, state, {\n                confirm_password: action.value\n            })\n            return newState8\n        default:\n            return state;\n    }\n}","const initialState = {\n    email: '',\n    password: '',\n};\n\nexport const existingUser = (state = initialState, action) => {\n    switch (action.type) {\n        case 'EMAIL':\n            let newState2 = Object.assign({}, state, {\n                email: action.value\n            })\n            return newState2\n        case 'PASSWORD':\n            let newState7 = Object.assign({}, state, {\n                password: action.value\n            })\n            return newState7\n        default:\n            return state;\n    }\n}","const initialState = {\n    shopping_cart: false\n};\n\nexport const shoppingCart = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SHOPPING_CART':\n            let newState = Object.assign({}, state, {\n                shopping_cart: action.value\n            })\n            return newState;\n        default:\n            return state;\n    }\n}","let initialState = {\n\n}\n\nexport const userDetails = (state = initialState, action) => {\n    switch (action.type) {\n        case 'DETAILS':\n            let newState = Object.assign({}, state, action.value)\n            return newState;\n        default:\n            return state;\n    }\n}","const initialState = {\n    isAdmin: false\n};\n\nexport const isAdmin = (state = initialState, action) => {\n    switch (action.type) {\n        case 'IS_ADMIN':\n            let newState = Object.assign({}, state, {\n                isAdmin: action.value\n            })\n            return newState;\n        default:\n            return state;\n    }\n}","const initialState = {\n    name: '',\n    price: 0,\n    category_id: 0,\n    files: {},\n    img_name: ''\n};\n\nexport const newProduct = (state = initialState, action) => {\n    switch (action.type) {\n        case 'NAME_P':\n            let newState = Object.assign({}, state, {\n                name: action.value\n            })\n            return newState;\n        case 'PRICE_P':\n            let newState1 = Object.assign({}, state, {\n                price: action.value\n            })\n            return newState1\n\n        case 'CATEGORY_ID':\n            let newState3 = Object.assign({}, state, {\n                category_id: action.value\n            })\n            return newState3\n        case 'UPLOAD_IMAGE':\n            let newState4 = Object.assign({}, state, {\n                files: action.value\n            })\n            return newState4\n        case 'IMAGE_NAME':\n            let newState5 = Object.assign({}, state, {\n                img_name: action.value\n            })\n            return newState5\n        default:\n            return state;\n    }\n}","const initialState = {\n    productId: 0\n};\n\nexport const editProduct = (state = initialState, action) => {\n    switch (action.type) {\n        case 'EDIT_PRODUCT':\n            let newState = Object.assign({}, state, {\n                productId: action.value\n            })\n            return newState;\n        default:\n            return state;\n    }\n}","const initialState = {\n    userOpenOrder: false,\n    itsNewUser: false,\n};\n\nexport const userStatus = (state = initialState, action) => {\n    switch (action.type) {\n        case 'OPEN_ORDER':\n            let newState = Object.assign({}, state, {\n                userOpenOrder: action.value\n            })\n            return newState;\n        case 'NEW_USER':\n            let newState1 = Object.assign({}, state, {\n                itsNewUser: action.value\n            })\n            return newState1\n        default:\n            return state;\n    }\n}","const initialState = {\r\n    loginPage: true,\r\n    aboutPage: true,\r\n    infoPage: true,\r\n    mobileMenu: false\r\n};\r\n\r\nexport const view = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'INFO_PAGE':\r\n            let newState = Object.assign({}, state, {\r\n                infoPage: action.value\r\n            })\r\n            return newState\r\n        case 'ABOUT_PAGE':\r\n            let newState1 = Object.assign({}, state, {\r\n                aboutPage: action.value\r\n            })\r\n            return newState1\r\n        case 'LOGIN_PAGE':\r\n            let newState2 = Object.assign({}, state, {\r\n                loginPage: action.value\r\n            })\r\n            return newState2\r\n        case 'MOBILE_MENU':\r\n            let newState3 = Object.assign({}, state, {\r\n                mobileMenu: action.value\r\n            })\r\n            return newState3\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\nimport { newUser } from './newUser';\nimport { existingUser } from './existingUser';\nimport { shoppingCart } from './shoppingCart';\nimport { userDetails } from './userdetails';\nimport { isAdmin } from './isAdmin';\nimport { newProduct } from './addProduct';\nimport { editProduct } from './EditProduct';\nimport { userStatus } from './userStatus';\nimport { view } from './view';\n\nexport const allReducers = combineReducers({\n    newUser,\n    existingUser,\n    shoppingCart,\n    userDetails,\n    isAdmin,\n    newProduct,\n    editProduct,\n    userStatus,\n    view\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport {allReducers} from './reducers/reducers'\n\nconst store = createStore(allReducers)\n\nReactDOM.render(<Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/payBtn.2df6e9ed.jpg\";"],"sourceRoot":""}